
name: Deploy Hugo site to AWS S3

on: 
  push:
    branches:
      - '**'

  workflow_dispatch:

env:
  AWS_BUCKET_NAME : "<example-bucket-name>"
  AWS_REGION : "<example-aws-region>"
  AWS_ROLE_ARN : "<example-aws-role-arn>"
  AWS_ROLE_SESSION_NAME : "<example-aws-role-session-name>"
  WEBSITE_DOMAIN: "<example-website-domain>"

permissions:
  contents: read
  id-token: write

concurrency:
  group: "website"
  cancel-in-progress: true

defaults:
  run:
    shell: bash


run-name: Deploy to ${{ github.ref }} by @${{ github.actor }}
jobs:
  terraform:
    environment: aws_website
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}

  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install 
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 0.105.0
          extended: true
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ env.WEBSITE_DOMAIN }}/"
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: website-dist
          path: |
            public


  deploy:
    environment: aws_website
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          role-session-name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: website-dist
      - name:  Copy files to s3
        run: |
          aws s3 cp ./public s3://${{ env.AWS_BUCKET_NAME }}/ --recursive
